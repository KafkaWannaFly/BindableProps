"use strict";(self.webpackChunkdocument_site=self.webpackChunkdocument_site||[]).push([[237],{1322:(e,n,t)=>{t.r(n),t.d(n,{default:()=>g});var a=t(2263),l=t(7961),r=t(5222),i=t(5009),o=t(7294),u=t(9844),c=t(7462),s=t(3746),p=t(7410),d=t(5424);const m=e=>{let{codeBlockHeight:n,code:t,language:a,highlightLinePredicate:l,highlightLineColor:r}=e;return o.createElement(s.ZP,{Prism:p.Z,language:a,code:t,theme:d.Z},(e=>{let{className:t,style:a,tokens:i,getLineProps:u,getTokenProps:s}=e;return o.createElement("pre",{key:i.toString(),style:{...a,height:n,fontFamily:"intel-one-mono"}},i.map(((e,n)=>{const t=e.map((e=>e.content)).join().replace(/,/g,"");return o.createElement("div",(0,c.Z)({key:n},u({line:e}),{style:{backgroundColor:l&&l(t)?r:"inherit"}}),o.createElement("span",null,n+1),e.map(((e,n)=>o.createElement("span",(0,c.Z)({key:n},s({token:e}))))))})))}))};function g(){const{siteConfig:e}=(0,a.Z)(),n="450px";return o.createElement(l.Z,{title:`${e.title}`,description:"MAUI App source generator"},o.createElement("div",null,o.createElement(r.Z,{direction:"vertical",style:{display:"flex",justifyContent:"center",alignItems:"center",textAlign:"center"},className:"margin-vert--lg",size:50},o.createElement(u.e,{sequence:["I spent hours to save your moments.",1e3,"",1e3],repeat:1/0,style:{fontFamily:"intel-one-mono",fontSize:"2rem",textDecoration:"underline",textUnderlineOffset:"1rem"}}),o.createElement("p",null,"Help you to create MAUI components without hundred lines of code as normal way.")),o.createElement(i.Z,{defaultActiveKey:"1",centered:!0,className:"container",type:"line",items:[{label:"My Code",key:"1",children:o.createElement(m,{language:"csharp",code:h,codeBlockHeight:n,highlightLinePredicate:e=>null!==e.match(/\[(BindableProp.*?)\]/g),highlightLineColor:"rgba(255, 255, 255, 0.1)"})},{label:"Generated Code",key:"2",children:o.createElement(m,{language:"csharp",code:y,codeBlockHeight:n})}]})))}const h='\n    using BindableProps;\n\n    namespace MyMauiApp.Controls;\n\n    public partial class NovelReview : ContentView\n    {\n        [BindableProp(DefaultBindingMode = (int)BindingMode.OneTime)]\n        private string _name = "Kafka On The Shore";\n        \n        [BindableProp]\n        private string _author = "Haruki Murakami";\n\n        public NovelReview()\n        {\n            \n        }\n    }\n',y='\n    // <auto-generated/>\n    using BindableProps;\n\n    namespace MyMauiApp.Controls\n    {\n        public partial class NovelReview\n        {\n\n            public  static readonly BindableProperty NameProperty = BindableProperty.Create(\n                nameof(Name),\n                typeof(string),\n                typeof(NovelReview),\n                "Kafka On The Shore",\n                (BindingMode)(int)BindingMode.OneTime,\n                null,\n                (bindable, oldValue, newValue) => \n                            ((NovelReview)bindable).Name = (string)newValue,\n                null,\n                null,\n                null\n            );\n\n            public  string Name\n            {\n                get => _name;\n                set \n                { \n                    OnPropertyChanging(nameof(Name));\n\n                    _name = value;\n                    SetValue(NovelReview.NameProperty, _name);\n\n                    OnPropertyChanged(nameof(Name));\n                }\n            }\n\n            public  static readonly BindableProperty AuthorProperty = BindableProperty.Create(\n                nameof(Author),\n                typeof(string),\n                typeof(NovelReview),\n                "Haruki Murakami",\n                (BindingMode)0,\n                null,\n                (bindable, oldValue, newValue) => \n                            ((NovelReview)bindable).Author = (string)newValue,\n                null,\n                null,\n                null\n            );\n\n            public  string Author\n            {\n                get => _author;\n                set \n                { \n                    OnPropertyChanging(nameof(Author));\n\n                    _author = value;\n                    SetValue(NovelReview.AuthorProperty, _author);\n\n                    OnPropertyChanged(nameof(Author));\n                }\n            }\n\n        }\n    }\n'}}]);